import 'package:firebase_auth/firebase_auth.dart';

/// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô claims (vip, admin) ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
Future<Map<String, dynamic>> readClaims() async {
  final user = FirebaseAuth.instance.currentUser;
  if (user == null) return {}; // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô

  // üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä token ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ claims ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  final idTokenResult = await user.getIdTokenResult(true);

  // üîç ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å claims
  final claims = idTokenResult.claims ?? {};

  return {
    'isVIP': claims['vip'] == true,
    'isAdmin': claims['admin'] == true,
  };
}

/// Extension ‡πÄ‡∏û‡∏¥‡πà‡∏° method isAdmin() ‡πÅ‡∏•‡∏∞ isVIP() ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö User ‡∏Ç‡∏≠‡∏á Firebase
extension UserX on User {
  /// ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ user ‡πÄ‡∏õ‡πá‡∏ô Admin ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  Future<bool> isAdmin({bool refresh = true}) async {
    final token = await getIdTokenResult(refresh);
    return token.claims?['admin'] == true;
  }

  /// ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ user ‡πÄ‡∏õ‡πá‡∏ô VIP ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  Future<bool> isVIP({bool refresh = true}) async {
    final token = await getIdTokenResult(refresh);
    return token.claims?['vip'] == true;
  }
}
